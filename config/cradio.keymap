/*
  * Copyright (c) 2020 The ZMK Contributors
  *test
  * SPDX-License-Identifier: MIT
  */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        hmr: hmr {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            label = "hmr";
            bindings = <&kp>, <&kp>;

            tapping-term-ms = <280>;
            hold-trigger-on-release;             // delay positional check until key-release
            flavor = "balanced";
            require-prior-idle-ms = <150>;
            require-prior-idle-ms = <150>;
            quick-tap-ms = <175>;
            hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 20 21 22 23 24 30 31 32 33>;
        };

        hml: hml {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            label = "hml";
            bindings = <&kp>, <&kp>;

            tapping-term-ms = <280>;
            hold-trigger-on-release;
            flavor = "balanced";
            require-prior-idle-ms = <150>;
            quick-tap-ms = <175>;
            hold-trigger-key-positions = <5 6 7 8 9 15 16 17 18 19 25 26 27 28 29 32 33 30 31>;
        };

        tapSk_holdLayer: tapSk_holdLayer {
            compatible = "zmk,behavior-hold-tap";
            label = "TAPSK_HOLDLAYER";
            bindings = <&mo>, <&sk>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "balanced";
            retro-tap;
        };
    };

    combos {
        compatible = "zmk,combos";

        capWords {
            bindings = <&caps_word>;
            key-positions = <13 16>;
            timeout-ms = <150>;
            require-prior-idle-ms = <100>;
            layers = <0>;
        };

        toSymb {
            bindings = <&mo 6>;
            key-positions = <30 33>;
            timeout-ms = <150>;
            require-prior-idle-ms = <100>;
            layers = <0>;
            slow-release;
        };

        toIpadSC {
            bindings = <&mo 2>;
            key-positions = <32 31>;
            timeout-ms = <150>;
            slow-release;
            require-prior-idle-ms = <100>;
            layers = <0>;
        };

        toAdj {
            bindings = <&mo 7>;
            key-positions = <0 4>;
            timeout-ms = <150>;
            slow-release;
            require-prior-idle-ms = <100>;
            layers = <0>;
        };

        escL {
            timeout-ms = <40>;
            bindings = <&kp ESCAPE>;
            key-positions = <3 2>;
            require-prior-idle-ms = <100>;
            layers = <0>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        L0 {
            bindings = <
&kp Q            &kp W            &kp E                &kp R              &kp T                            &kp Y        &kp U              &kp I                &kp O            &kp P
&hml LEFT_GUI A  &hml LEFT_ALT S  &hml LEFT_CONTROL D  &hml LEFT_SHIFT F  &kp G                            &kp H        &hmr LEFT_SHIFT J  &hmr LEFT_CONTROL K  &hmr LEFT_ALT L  &hmr LEFT_GUI SEMICOLON
&kp Z            &kp X            &kp C                &kp V              &kp B                            &kp N        &kp M              &kp COMMA            &kp DOT          &kp FSLH
                                                       &lt 8 TAB          &tapSk_holdLayer 1 LEFT_SHIFT    &lt 3 SPACE  &lt 4 ENTER
            >;
        };

        customWinSc {
            bindings = <
&trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
&trans  &trans  &kp A   &trans  &trans    &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
                        &trans  &trans    &trans  &trans
            >;
        };

        customIpadSC {
            bindings = <
&trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
                        &trans  &trans    &trans  &trans
            >;
        };

        num {
            bindings = <
&trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
                        &trans  &trans    &trans  &trans
            >;
        };

        nav-media {
            bindings = <
&trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
                        &trans  &trans    &trans  &trans
            >;
        };

        fn {
            bindings = <
&trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
                        &trans  &trans    &trans  &trans
            >;
        };

        symb {
            bindings = <
&none  &none  &none  &none  &none    &none  &none  &none  &none  &none
&none  &none  &none  &none  &none    &none  &none  &none  &none  &none
&none  &none  &none  &none  &none    &none  &none  &none  &none  &none
                     &none  &none    &none  &none
            >;
        };

        adj {
            bindings = <
&trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
                        &trans  &trans    &trans  &trans
            >;
        };

        mods {
            bindings = <
&trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
                        &trans  &trans    &trans  &trans
            >;
        };
    };
};
